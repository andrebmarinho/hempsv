RED  =\033[0;31m
NC   =\033[0m # No Color

KERNEL_PKG_TGT    = ../include/kernel_pkg.o
KERNEL_PKG_SRC    = $(KERNEL_PKG_TGT:.o=.c) $(KERNEL_PKG_TGT:.o=.h)

ASFLAGS				= -march=rv32im -mabi=ilp32 
CFLAGS            	= -O0 -Wall -mstrict-align -c -s -std=c99 -march=rv32im  -mabi=ilp32
GCC_RISCV          = riscv32-unknown-elf-gcc $(CFLAGS)
AS_RISCV           = riscv32-unknown-elf-as $(ASFLAGS)
LD_RISCV           = riscv32-unknown-elf-ld
DUMP_RISCV         = riscv32-unknown-elf-objdump
COPY_RISCV         = riscv32-unknown-elf-objcopy -O binary
#COPY_RISCV         = riscv32-unknown-elf-objcopy -I elf32-big -O binary

BOOT_MASTER       = boot_master
BOOT_MASTER_SRC   = kernel/master/boot.S
KERNEL_MASTER 	  = kernel_master
KERNEL_MASTER_SRC = kernel/master/kernel_master.c 
KERNEL_MASTER_H	  = kernel/master/kernel_master.h

BOOT_SLAVE        = boot_slave
BOOT_SLAVE_SRC	  = kernel/slave/boot.S
KERNEL_SLAVE 	  = kernel_slave
KERNEL_SLAVE_SRC  = kernel/slave/kernel_slave.c 
KERNEL_MASTER_H	  = kernel/slave/kernel_slave.h


#https://www.gnu.org/software/make/manual/make.html#Automatic-Variables

MODULES_DIR = modules/
MODULES_NAMES = utils packet applications pending_service reclustering new_task communication processors task_control task_location task_migration task_scheduler resource_manager
MODULES_SRC = $(addsuffix .c, $(addprefix $(MODULES_DIR), $(MODULES_NAMES) ) ) $(addsuffix .h, $(addprefix $(MODULES_DIR), $(MODULES_NAMES) ) )
MODULES_TGT = $(addsuffix .o, $(addprefix $(MODULES_DIR), $(MODULES_NAMES) ) )

KERNEL_MASTER_MODULES = utils packet applications reclustering new_task communication processors resource_manager
KERNEL_MASTER_TGT     = $(addsuffix .o, $(addprefix $(MODULES_DIR), $(KERNEL_MASTER_MODULES) ) )

KERNEL_SLAVE_MODULES = utils packet pending_service communication task_control task_location task_migration task_scheduler
KERNEL_SLAVE_TGT 	 = $(addsuffix .o, $(addprefix $(MODULES_DIR), $(KERNEL_SLAVE_MODULES) ) )

default: $(KERNEL_MASTER).txt $(KERNEL_SLAVE).txt 

$(KERNEL_PKG_TGT): $(KERNEL_PKG_SRC)
	@printf "${RED}Compiling Kernel Package: %s ...${NC}\n" "$*.c"
	$(GCC_RISCV) -o $*.o $*.c

$(MODULES_TGT): $(MODULES_SRC)
	@printf "${RED}Compiling Kernel %s ...${NC}\n" "$*.c"
	$(GCC_RISCV) -o $*.o $*.c

$(KERNEL_MASTER).txt: $(KERNEL_PKG_TGT) $(MODULES_TGT) $(KERNEL_MASTER_SRC) $(KERNEL_MASTER_H) $(BOOT_MASTER_SRC)
	@printf "${RED}Compiling Kernel Master: %s ...${NC}\n" "$(KERNEL_MASTER).c" 
	$(AS_RISCV) --defsym sp_addr=$(MEM_SP_INIT) -o $(BOOT_MASTER).o $(BOOT_MASTER_SRC)
	$(GCC_RISCV) -DHOP_NUMBER=1 -Dload -o $(KERNEL_MASTER).o $(KERNEL_MASTER_SRC) -D IS_MASTER
	$(LD_RISCV) -Ttext 0 -eentry --no-relax -Map $(KERNEL_MASTER).map -s -N -G 0 -o $(KERNEL_MASTER).bin $(BOOT_MASTER).o $(KERNEL_MASTER).o $(KERNEL_MASTER_TGT) $(KERNEL_PKG_TGT)
	$(LD_RISCV) -Ttext 0 -eentry --no-relax -Map $(KERNEL_MASTER)_debug.map  -G 0 -o $(KERNEL_MASTER)_debug.bin $(BOOT_MASTER).o $(KERNEL_MASTER).o $(KERNEL_MASTER_TGT) $(KERNEL_PKG_TGT)
	$(DUMP_RISCV) -S $(KERNEL_MASTER)_debug.bin > $(KERNEL_MASTER).lst
	$(COPY_RISCV) $(KERNEL_MASTER).bin $(KERNEL_MASTER).dump
	hexdump -v -e '"%08x\n"' $(KERNEL_MASTER).dump > $(KERNEL_MASTER).txt	
	
$(KERNEL_SLAVE).txt: $(KERNEL_PKG_TGT) $(MODULES_TGT) $(KERNEL_SLAVE_SRC) $(KERNEL_SLAVE_H) $(BOOT_SLAVE_SRC)
# $(KERNEL_SLAVE).txt: $(KERNEL_SLAVE_SRC) $(BOOT_SLAVE_SRC)
	@printf "${RED}Compiling Kernel Slave: %s ...${NC}\n" "$(KERNEL_SLAVE).c"
	# $(AS_RISCV) --defsym sp_addr=$(PAGE_SP_INIT) --defsym gp_addr=$(MEM_GP_INIT) -o $(BOOT_SLAVE).o $(BOOT_SLAVE_SRC)
	$(AS_RISCV) --defsym sp_addr=$(PAGE_SP_INIT) -o $(BOOT_SLAVE).o $(BOOT_SLAVE_SRC)
	# $(AS_RISCV) --defsym sp_addr=0x10000 -o $(BOOT_SLAVE).o $(BOOT_SLAVE_SRC)
	$(GCC_RISCV) -o $(KERNEL_SLAVE).o $(KERNEL_SLAVE_SRC) -D PLASMA -DPAGE_SP_INIT=$(PAGE_SP_INIT)
	
	# $(LD_RISCV) -Ttext 0 -s -N -o $(KERNEL_SLAVE).bin $(BOOT_SLAVE).o $(KERNEL_SLAVE).o
	$(LD_RISCV) -Ttext 0 -eentry --no-relax -Map $(KERNEL_SLAVE).map -s -N -o $(KERNEL_SLAVE).bin $(BOOT_SLAVE).o $(KERNEL_SLAVE).o $(KERNEL_SLAVE_TGT) $(KERNEL_PKG_TGT)	
	# $(LD_RISCV) -Ttext 0 -eentry -Map $(KERNEL_SLAVE).map -s -N -o $(KERNEL_SLAVE).bin $(BOOT_SLAVE).o $(KERNEL_SLAVE).o $(KERNEL_SLAVE_TGT) $(KERNEL_PKG_TGT)
	
	# $(LD_RISCV) -Ttext 0 -s -N -o $(KERNEL_SLAVE)_debug.bin $(BOOT_SLAVE).o $(KERNEL_SLAVE).o	
	$(LD_RISCV) -Ttext 0 -eentry --no-relax -Map $(KERNEL_SLAVE)_debug.map -o $(KERNEL_SLAVE)_debug.bin $(BOOT_SLAVE).o $(KERNEL_SLAVE).o $(KERNEL_SLAVE_TGT) $(KERNEL_PKG_TGT)
#	$(LD_RISCV) -Ttext 0 -eentry -Map $(KERNEL_SLAVE)_debug.map -o $(KERNEL_SLAVE)_debug.bin $(BOOT_SLAVE).o $(KERNEL_SLAVE).o# $(KERNEL_SLAVE_TGT) $(KERNEL_PKG_TGT)
	
	$(DUMP_RISCV) -S $(KERNEL_SLAVE)_debug.bin > $(KERNEL_SLAVE).lst
	$(COPY_RISCV) $(KERNEL_SLAVE).bin $(KERNEL_SLAVE).dump
	hexdump -v -e '"%08x\n"' $(KERNEL_SLAVE).dump > $(KERNEL_SLAVE).txt
	
clean:
	@printf "Cleaning up\n"
	@rm -rf modules/*.o
	@rm -rf *.o
	@rm -rf *.bin
	@rm -rf *.map
	@rm -rf *.lst
	@rm -rf *.txt
	@rm -rf *.dump
	@rm -rf ../include/*.o
